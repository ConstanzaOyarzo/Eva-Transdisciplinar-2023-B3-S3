import tkinter as tk

ventana = tk.Tk()

# Obtener el tamaño de la pantalla
ventana.update()
window_width = ventana.winfo_screenwidth()
window_height = ventana.winfo_screenheight()

# Obtener dimensiones de la ventana después de que se haya mostrado
ventana.update()
window_width = ventana.winfo_width()
window_height = ventana.winfo_height()

# Dividir la ventana en cuatro marcos
marco_1 = tk.Frame(ventana, bg="red")
marco_2 = tk.Frame(ventana, bg="green")
marco_3 = tk.Frame(ventana, bg="blue")
marco_4 = tk.Frame(ventana, bg="yellow")

# Configurar el tamaño de las filas y columnas
ventana.columnconfigure(0, weight=1, minsize=window_width // 2)
ventana.columnconfigure(1, weight=1, minsize=window_width // 2)
ventana.rowconfigure(0, weight=1, minsize=window_height // 2)
ventana.rowconfigure(1, weight=1, minsize=window_height // 2)

# Ubicar los marcos en la ventana
marco_1.grid(row=0, column=0, sticky="nsew")
marco_2.grid(row=0, column=1, sticky="nsew")
marco_3.grid(row=1, column=0, sticky="nsew")
marco_4.grid(row=1, column=1, sticky="nsew")

class GFG:
    def __init__(self, marco=None):
        self.marco_1 = marco

        # coordenadas iniciales
        self.x = 0
        self.y = 0

        # crear rectangulo en la esquina inferior izquierda
        self.rectangle = tk.Frame(self.marco_1, width=20, height=20, bg="green")
        self.rectangle.pack()

        # flag para indicar si se debe mover o no
        self.move_enabled = False

    def movimiento(self):
        if self.move_enabled:
            # mover figura
            self.rectangle.place(x=self.rectangle.winfo_x() + self.x, y=self.rectangle.winfo_y() + self.y)
            self.move_enabled = False
        self.marco_1.after(1, self.movimiento)

    # movmiento a la izquierda
    def izquierda(self, event):
        print(event.keysym)
        self.x = -5
        self.y = 0
        self.move_enabled = True

    # movimiento a la derecha
    def derecha(self, event):
        print(event.keysym)
        self.x = 5
        self.y = 0
        self.move_enabled = True

    # movimiento hacia arriba
    def arriba(self, event):
        print(event.keysym)
        self.x = 0
        self.y = -5
        self.move_enabled = True
    
    # movimiento hacia abajo
    def abajo(self, event):
        print(event.keysym)
        self.x = 0
        self.y = 5
        self.move_enabled = True
    
    # movimiento diagonal arriba-derecha
    def diagonal_arriba_derecha(self, event):
        print(event.keysym)
        self.x = 5
        self.y = -5
        self.move_enabled = True

    # movimiento diagonal arriba-izquierda
    def diagonal_arriba_izquierda(self, event):
        print(event.keysym)
        self.x = -5
        self.y = -5
        self.move_enabled = True

# Crear instancia de GFG dentro del marco 1
gfg = GFG(marco_1)

# Establecer la posición inicial del rectángulo en la esquina inferior izquierda
gfg.rectangle.place(x=5, y=window_height - 25)

# Controlar movimiento por teclado
ventana.bind("<KeyPress-a>", lambda e: gfg.izquierda(e))
ventana.bind("<KeyPress-d>", lambda e: gfg.derecha(e))
ventana.bind("<KeyPress-w>", lambda e: gfg.arriba(e))
ventana.bind("<KeyPress-s>", lambda e: gfg.abajo(e))
ventana.bind("<KeyPress-e>", lambda e: gfg.diagonal_arriba_derecha(e))
ventana.bind("<KeyPress-q>", lambda e: gfg.diagonal_arriba_izquierda(e))
ventana.after(0, gfg.movimiento)

ventana.mainloop()
